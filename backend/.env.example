###############################
# Exemple de configuration env #
###############################

# Renommer ce fichier en .env et REMPLACER toutes les valeurs placeholder.
# Ne JAMAIS committer de secrets réels. Regénérer après toute fuite.

NODE_ENV=development
PORT=5000
LOG_LEVEL=info
ENABLE_REQUEST_TRACE=true

# Commission réservation (0.4 = 40%)
RESERVATION_COMMISSION_RATE=0.4

# Base de données MongoDB (remplacer <...>)
MONGODB_URI=mongodb+srv://<USERNAME>:<PASSWORD>@<CLUSTER_HOST>/<DB_NAME>?retryWrites=true&w=majority

# Auth JWT (générer une string aléatoire >= 48 chars)
JWT_SECRET=CHANGE_ME_GENERATE_RANDOM_SECRET

# Stripe (clés de test ou live selon l'env)
STRIPE_SECRET_KEY=sk_test_xxxxxxxxxxxxxxxxxxxxxxxxx
STRIPE_WEBHOOK_SECRET=whsec_xxxxxxxxxxxxxxxxxxxxxxx

# Frontend déployé (CORS / redirections)
VERCEL_FRONTEND_URL=https://g-house.example.com

# Cloudinary (média)
CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=123456789012345
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Email SMTP / Provider (préférer mot de passe d'application ou clé API)
EMAIL_USER=no-reply@example.com
EMAIL_PASS=app_password_or_api_key

# Facultatif / futurs
# SENTRY_DSN=
# REDIS_URL=redis://localhost:6379

# --- Notes ---
# 1. Créer plusieurs fichiers: .env, .env.test, .env.production.
# 2. Ne pas entourer JWT_SECRET de quotes.
# 3. Toujours rotate après exposition publique.

